import Head from 'next/head'
import Header from '@/components/layout/header'
import {
  BannerSection,
  MarketSection,
  MyCardsSection,
} from '@/components/partials/home'
import {
  BUDGET_ENDPOINT,
  MARKET_ENDPOINT,
  MY_CARDS_ENDPOINT,
} from '@/constants/index'
import { fetcher } from '@/utils/index'
import { useContext, useEffect, useRef, useState } from 'react'
import { MarketCardsContext } from '@/context/market'
import { MyCardsContext } from '@/context/my-cards'
import { BudgetContext } from '@/context/budget'

const Home = ({ market, myCards, budget }) => {
  const { getMarketCards } = useContext(MarketCardsContext)
  const { getMyCards } = useContext(MyCardsContext)
  const { getBudget } = useContext(BudgetContext)

  const [activeLink, setActiveLink] = useState(null)
  const sections = [
    {
      id: 'myCards',
      title: 'My Cards',
      ref: useRef(null),
      component: <MyCardsSection />,
    },
    {
      id: 'market',
      title: 'Market',
      ref: useRef(null),
      component: <MarketSection />,
    },
  ]

  useEffect(() => {
    const getActiveLinkOnScroll = () => {
      const { innerHeight } = window

      const activeLink = sections.find((div) => {
        const { ref } = div
        const { top, bottom } = ref.current.getBoundingClientRect()

        return top < innerHeight / 3 && bottom > innerHeight / 3
      })

      activeLink ? setActiveLink(activeLink.id) : setActiveLink(null)
    }

    window.addEventListener('scroll', getActiveLinkOnScroll)

    return () => {
      window.removeEventListener('scroll', getActiveLinkOnScroll)
    }
  }, [])

  const handleClick = (id) => {
    const { ref } = sections.find((div) => div.id === id)
    const position = ref.current.getBoundingClientRect().top - 122
    window.scrollBy({ top: position, behavior: 'smooth' })
  }

  useEffect(() => {
    getMarketCards(market)
    getMyCards(myCards)
    getBudget(budget)
  }, [])

  return (
    <div>
      <Head>
        <title>V Card Market App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header activeLink={activeLink} handleClick={handleClick} />
      <BannerSection />
      <main className="main">
        {sections.map((div) => (
          <div id={div.id} ref={div.ref} key={div.id}>
            {div.component}
          </div>
        ))}
      </main>
    </div>
  )
}

export const getStaticProps = async () => {
  const results = await Promise.allSettled([
    fetcher(MARKET_ENDPOINT),
    fetcher(MY_CARDS_ENDPOINT),
    fetcher(BUDGET_ENDPOINT),
  ])

  for (const result of results) {
    if (result.status === 'rejected') {
      return {
        notFound: true,
      }
    }
  }

  const [market, myCards, budget] = results.map((result) => result.value)

  return {
    props: {
      market,
      myCards,
      budget: budget.budget,
    },
  }
}

export default Home
